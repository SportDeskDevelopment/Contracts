openapi: 3.0.0
info:
  title: Trainer API
  version: 1.0.0
servers:
  - url: http://localhost:5001

paths:
  /api/trainer/create-trainings:
    post:
      operationId: createTrainings
      tags:
        - trainer
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTrainingsRequest"
      responses:
        "200":
          description: Trainings created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Trainings created successfully"
        "400":
          $ref: "#/components/responses/InvalidInput"
        "401":
          $ref: "#/components/responses/InvalidToken"

  /api/trainer/create-gyms:
    post:
      operationId: createGyms
      tags:
        - trainer
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateGymsDto"
      
      responses:
        "200":
          description: Gyms created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Gyms created successfully
        "400":
          $ref: "#/components/responses/InvalidInput"
        "401":
          $ref: "#/components/responses/InvalidToken"


  /api/trainer/create-groups:
    post:
      operationId: createGroups
      tags:
        - trainer
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateGroupsDto"
      
      responses:
        "200":
          description: Groups created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Groups created successfully
        "400":
          $ref: "#/components/responses/InvalidInput"
        "401":
          $ref: "#/components/responses/InvalidToken"


  
  /api/trainer/persist-contact-information:
    post:
      operationId: persistContactInformation
      tags:
        - trainer
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PersistContactInformation"
      responses:
        "200":
          description: Contact information saved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Contact information saved successfully
        "400":
          $ref: "#/components/responses/InvalidInput"
        "401":
          $ref: "#/components/responses/InvalidToken"

  
  /api/trainer/create-subscriptions:
    post:
      operationId: createSubscriptions
      tags:
        - trainer
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSubscriptions"
      responses:
        "200":
          description: Subscriptions created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Subscriptions created successfully
        "400":
          $ref: "#/components/responses/InvalidInput"
        "401":
          $ref: "#/components/responses/InvalidToken"

  /api/trainer/me:
    get:
      operationId: getTrainerProfile
      tags:
        - profiles
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Trainer profile
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrainerProfile"
        "401":
          $ref: "#/components/responses/InvalidToken"
        "404":
          $ref: "#/components/responses/ProfileNotFound"

  /api/trainer/profile:
    post:
      operationId: createTrainerProfile
      tags:
        - profiles
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTrainerProfileRequest"
      responses:
        "200":
          description: Profile created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrainerProfileId"
        "401":
          $ref: "#/components/responses/InvalidToken"
        "400":
          $ref: "#/components/responses/InvalidInput"
        "409":
          $ref: "#/components/responses/ProfileExists"

    delete:
      operationId: deleteTrainerProfile
      tags:
        - profiles
      security:
        - bearerAuth: []
      responses:
        "204":
          description: Profile deleted successfully
        "401":
          $ref: "#/components/responses/InvalidToken"
        "404":
          $ref: "#/components/responses/ProfileNotFound"

  /api/trainer/scan-qr:
    post:
      operationId: scanTrainee
      tags:
        - trainer
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ScanTraineeRequest"
      responses:
        "200":
          description: Trainee scan result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScanTraineeResponse"
        "401":
          $ref: "#/components/responses/InvalidToken"
        "404":
          $ref: "#/components/responses/TraineeNotFound"

  /api/trainer/scan-qr-and-create:
    post:
      operationId: scanAndCreateTraining
      tags:
        - trainer
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ScanAndCreateRequest"
      responses:
        "200":
          description: Training created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateTrainingResponse"
        "401":
          $ref: "#/components/responses/InvalidToken"
        "404":
          $ref: "#/components/responses/TraineeNotFound"

  /api/trainer/attach-to-existing:
    post:
      operationId: attachToExistingTraining
      tags:
        - trainer
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AttachToTrainingRequest"
      responses:
        "200":
          description: Trainee attached successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttachToTrainingResponse"
        "401":
          $ref: "#/components/responses/InvalidToken"
        "404":
          $ref: "#/components/responses/TraineeNotFound"
        "403":
          $ref: "#/components/responses/InvalidTrainingAccess"

components:
  schemas:
    CreateGymsDto:
      type: object
      required:
        - gyms
        - trainerId
      properties:
        trainerId:
          type: string
        gyms:
          type: array
          items:
            type: object
            required:
              - name
              - address
            properties:
              name:
                type: string
              address:
                type: string
              geoLat:
                type: number
                format: float
              geoLng:
                type: number
                format: float
              workHours:
                type: string

    CreateGroupsDto:
      type: object
      required:
        - groups
        - trainerId
      properties:
        trainerId:
          type: string
        groups:
          type: array
          items:
            type: object
            required:
              - name
            properties:
              name:
                type: string
              gymId:
                type: string
              trainerIds:
                type: array
                items:
                  type: string
              traineeIds:
                type: array
                items:
                  type: string

    PersistContactInformation:
      type: object
      required:
        - trainerId
      properties:
        trainerId:
          type: string
        emails:
          type: array
          items:
            type: string
        phoneNumbers:
          type: array
          items:
            type: string
        aboutMe:
          type: string
        socials:
          type: array
          items:
            type: object
            required:
              - name
              - url
            properties:
              name:
                type: string
              url:
                type: string

    
    
    CreateSubscriptions:
      type: object
      required:
        - trainerId
        - subscriptions
      properties:
        trainerId:
          type: string
        subscriptions:
          type: array
          items:
            type: object
            required:
              - type
              - name
            properties:
              name:
                type: string
              maxTrainings:
                type: integer
              maxDays:
                type: integer
              price:
                type: number
              notes:
                type: string
              type:
                type: string
                enum: 
                  - PERIOD
                  - DAYS
                  - PERIOD_AND_DAYS
                description: Type of the subscription
              isPublic:
                type: boolean
              groupIds:
                type: array
                items:
                  type: string

    TrainerProfileId:
      type: object
      required:
        - id
      properties:
        id:
          type: string

    TrainerProfile:
      type: object
      required:
        - id
        - userId
      properties:
        id:
          type: string
        userId:
          type: string

    CreateTrainerProfileRequest:
      type: object
      properties:
        specialization:
          type: string
        experience:
          type: integer
        description:
          type: string
        achievements:
          type: array
          items:
            type: string

    ScanTraineeRequest:
      type: object
      required:
        - traineeUsername
      properties:
        traineeUsername:
          type: string

    ScanAndCreateRequest:
      type: object
      required:
        - traineeUsername
      properties:
        traineeUsername:
          type: string
        training:
          type: object
          properties:
            type:
              type: string
              enum: [INDIVIDUAL, GROUP]
            date:
              type: string
              format: date-time
            durationMin:
              type: integer
            gymId:
              type: string
            groupId:
              type: string
            templateId:
              type: string

    ScanTraineeResponse:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum: [noActiveTraining, traineeAlreadyRecorded, traineeRecordedSuccessfully, specifyTraining]
        trainings: 
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              type:
                type: string
              startDate:
                type: string
                format: date-time
              name:
                type: string

    CreateTrainingResponse:
      type: object
      required:
        - status
        - trainingId
        - traineeAdded
      properties:
        status:
          type: string
          enum: [trainingCreated]
        trainingId:
          type: string
        traineeAdded:
          type: boolean

    AttachToTrainingRequest:
      type: object
      required:
        - trainingId
        - traineeUsername
      properties:
        trainingId:
          type: string
        traineeUsername:
          type: string

    AttachToTrainingResponse:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum: [added_to_existing_training]

    CreateTrainingsRequest:
      type: object
      required:
        - trainings
        - trainerId
      properties:
        trainerId:
          type: string
          description: ID of the trainer creating the trainings
        trainings:
          type: array
          items:
            $ref: "#/components/schemas/TrainingDto"
          description: Array of trainings to create

    TrainingDto:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Name of the training
        type:
          type: string
          enum: [INDIVIDUAL, GROUP]
          description: Type of the training
        startDate:
          type: string
          format: date-time
          description: Start date and time of the training
        durationMin:
          type: integer
          description: Duration of the training in minutes
        gymId:
          type: string
          description: ID of the gym where training takes place
        groupId:
          type: string
          description: ID of the group for group training
        templateId:
          type: string
          description: ID of the training template
        price:
          type: integer
          description: Price of the training 
        trainerIds:
          type: array
          items:
            type: string
          description: Array of trainer IDs for the training
        isSaveAsTemplate:
          type: boolean
          description: Flag to indicate if the training should be saved as a template
        timeSlots:
          type: array
          description: Recurring time slots for the training
          items:
            type: object
            required:
              - dayOfTheWeek
              - hours
              - minutes
            properties:
              dayOfTheWeek:
                type: string
                description: Day of the week (e.g., Monday, Tuesday)
              hours:
                type: integer
                description: Hour in 24h format
              minutes:
                type: integer
                description: Minutes past the hour  

  responses:
    InvalidToken:
      description: Invalid token
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Invalid token"

    InvalidInput:
      description: Invalid input
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Invalid input data"

    ProfileNotFound:
      description: Profile not found
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Profile not found"

    ProfileExists:
      description: Profile already exists
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Profile already exists"

    TraineeNotFound:
      description: Trainee not found
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Trainee not found"

    InvalidTrainingAccess:
      description: Invalid training access
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "You don't have access to this training"